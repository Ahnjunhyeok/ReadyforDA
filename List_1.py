# 리스트 자료형
from cgi import print_directory


odd = [1, 3, 5, 7, 9]

# 리스트명 = [요소1, 요소2, 요소3, ....]
a = []
b = [1, 2, 3]
c = ["Life", "is", "too", "short"]
d = [1, 2, "Life", "is"]
e = [1, 2, ["Life", "is"]]

# 리스트 안에는 어떠한 자료형도 포함시킬 수 있다. 
# 리스트 자체를 요솟값으로 가질 수도 있다. 

# 리스트의 인덱싱과 슬라이싱
# 1. 리스트의 인덱싱
a = [1, 2, 3]
print(a[0]) # 0번째 자료를 출력하라
print(a[0] + a[2])
print(a[-1])

a = [1, 2, 3, ["a", "b", "c"]]
print(a[0])
print(a[-1])
print(a[3])

# 리스트 a에 포함된 ["a", "b", "c"] 리스트에서 "a" 값을 인덱싱을 사용해 끄집어낼 수 있는 방법
print(a[-1][0])
print(a[-1][1])
print(a[-1][2])

# 다중 리스트에서도 인덱싱이 가능하다. 

# 2. 리스트의 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2])

# 문자열에서 슬라이싱했던 것과 완전히 동일한 방식이다. 
a = [1, 2, 3, 4, 5]
b = a[:2]
c = a[2:]
print(b)
print(c)

# 중첩된 리스트에서 슬라이싱 게임
a = [1, 2, 3, ["a", "b", "c"], 4, 5]
print(a[2:5])
print(a[3][:2])

# 리스트 연산하기

# 1. 리스트 더하기(+)
a = [1, 2, 3]
b = [4, 5, 6]
print(a+b)

# 2. 리스트 반복하기(*)
a = [1, 2, 3]
print(a*3)

# 3. 리스트 길이 구하기 
a = [1, 2, 3]
print(len(a))

# len 함수는 문자열, 리스트 외에 앞으로 배울 튜플과 딕셔너리에도 사용할 수 있는 함수이다.

# 실수하기 쉬운 리스트 연산 오류

a = [1, 2, 3]
# print(a[2] + "hi") 이런 식으로 하면 오류가 발생한다. 정수형과 문자열, 각각 다른 자료형이기 때문에 형 오류가 발생한다. 

# 옳은 방법
print(str(a[2]) + "hi")

# 리스트의 수정과 삭제
a = [1, 2, 3]
a[2] = 4

print(a)

# del 함수 사용해 리스트 요소 삭제하기
a = [1, 2, 3]
del a[1]
print(a)

# del 함수는 파이썬이 자체적으로 가지고 있는 삭제 함수이며 다음과 같이 사용한다.
# del 객체; 객체란 파이썬에서 사용되는 모든 자료형을 말한다. 

# 슬라이싱을 이용해서 리스트의 요소 여러 개를 한꺼번에 삭제할 수 있다. 
a = [1, 2, 3, 4, 5]
del a[2:]
print(a)

# 리스트의 요소를 삭제하는 방법에는 2가지가 더 있다. 
# 1. 리스트의 remove와 pop 함수를 사용하는 방법이다. 
