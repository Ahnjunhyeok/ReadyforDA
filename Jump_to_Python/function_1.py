# 함수
# 파이썬 함수의 구조
# def 함수 이름(매개 변수):
    # 수행할 문장1
    # 수행할 문장2
    # ...

# 예시
def add(a, b):
    return a + b

# 함수의 풀이
# 이 함수의 이름은 add이고 입력으로 2개의 값을 받으며 결괏값은 2개의 입력값을 더한 값이다.
# return은 함수의 결괏값을 돌려주는 명령어이다. 
# 함수 만들어보기
def add(a, b):
    return a + b 

a = 3
b = 4
c = add(a, b) # add(3, 4)의 반환 값을 c에 대입
print(c)

# 매개변수와 인수
# 매개변수는 함수에 입력으로 전달된 값을 받는 '변수'를 의미하고, 인수는 함수를 호출할 때 전달하는 입력값을 의미한다. 
# def add(a, b): a, b는 매개변수
#   return a + b 3, 4는 인수
# 용어의 혼용에 주의할 것!

# 입력값과 결괏값에 따른 함수의 형태
# 입력값과 결괏값의 존재 유무에 따라 4가지 유형으로 나뉜다. 

# 1. 일반적인 함수(입력값 유, 결괏값 유) 
# def 함수 이름(매개변수):
#   수행할 문장1
#   ...
#   return 결괏값
def add(a, b):
    result = a + b
    return result 

a = add(3, 4)
print(a)

# 입력값 유, 결괏값 유인 함수 사용법
# 결괏값을 받을 변수 = 함수이름(입력인수1, 입력인수2, ...)

# 2. 입력값 무, 결괏값 유
def say():
    return "Hi"

a = say()
print(a)

# 결괏값을 받을 변수 = 함수이름() - 괄호 안에 아무 값도 넣지 않아야한다. 

# 3. 입력값 유, 결괏값 무
def add(a, b):
    print("%d, %d의 합은 %d입니다." % (a, b, a + b))
add(3, 4)
a = add(3, 4)

# print(a)를 하면 None이 나온다. None이 나오면 거짓을 나타내는 자료형이라고 앞에서 배운 적이 있다.
# 위 add 함수처럼 결괏값이 없을 때 a = add(3, 4)처럼 쓰면 함수 add는 반환 값으로 a 변수에 None을 돌려준다.  
# print문은 단지 함수의 구성 요소 중 하나인 <수행할 문장>에 해당하는 부분일 뿐이다. 결괏값은 없다. 
# 결괏값은 오로지 return 명령어로만 돌려받을 수 있다. 
# 함수이름(입력인수1, 입력인수2, ....)

# 4. 입력값 무, 결괏값 무인 함수
def say():
    print("Hi")

# 입력 인수를 받는 매개변수도 없고 return문도 없으니 입력값도 결괏값도 없는 함수이다. 
# 이 함수를 사용하는 방법은 아래처럼 단 한가지이다. 
say()
# 함수이름()
